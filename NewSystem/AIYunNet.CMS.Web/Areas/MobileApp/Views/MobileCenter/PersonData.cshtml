@using AIYunNet.CMS.Domain.Model
@using AIYunNet.CMS.Common.Utility;
@model WebUser
@{
    ViewBag.Title = "PersonData";
    Layout = "~/Areas/MobileApp/Views/Shared/_mobileLayout.cshtml";
}
<link href="~/Content/mui-master/examples/hello-mui/css/mui.min.css" rel="stylesheet" />
<link href="~/Content/mui-master/examples/hello-mui/css/app.css" rel="stylesheet" />
<link href="~/Content/mui-master/examples/hello-mui/css/mui.picker.css" rel="stylesheet" />
<link href="~/Content/mui-master/examples/hello-mui/css/mui.poppicker.css" rel="stylesheet" />
<script src="~/Content/mui-master/examples/hello-mui/js/mui.min.js"></script>
<script src="~/Content/mui-master/examples/hello-mui/js/mui.picker.js"></script>
<script src="~/Content/mui-master/examples/hello-mui/js/mui.poppicker.js"></script>
<script src="~/Content/mui-master/examples/hello-mui/js/city.data.js"></script>
<script src="~/Content/mui-master/examples/hello-mui/js/city.data-3.js"></script>
<style>
    .mui-pciker-list {
        background-color: #ddd;
    }
</style>
<script>
    var html = "<h1>个人资料</h1>";
    $("#header").append(html);
</script>
<div class="container" id="container">

    <div class="personal-data1">
        <ul>
            <li><a href="javascript:void(0);" onclick="EditPersonDataText(this, 'NickName')"><span>用户名(昵称)</span><em>@Model.NickName</em></a></li>
            <li><a href="javascript:void(0);" onclick="EditPersonDataText(this, 'Email')"><span>邮箱</span><em>@Model.Email</em></a></li>
            <li><a href="my-name.html"><span>手机号</span><em>@Model.Telephone</em></a></li>
            <li><a href="javascript:void(0);" onclick="EditPersonDataText(this, 'TrueName')"><span>真实姓名</span><em>@Model.TrueName</em></a></li>
            <li><a href="my-name.html"><span>性别</span><em>@Model.Sex</em></a></li>
            <li><a href="javascript:void(0)" id="showCityPicker"><span>所在地</span><em id="showCityPickerem">@Model.ProvinceName  @Model.CityName</em></a></li>
            <li><a href="javascript:void(0);" onclick="EditPersonDataArea(this, 'AreasID')"><span>服务地区</span><em>@Model.AreasName</em><i style="display:none;">@Model.AreasID</i></a></li>
        </ul>
    </div>

</div>
<script>
    function EditPersonDataText(item,type)
    {
        var title = $(item).find("span").text();
        var data=$(item).find("em").text();
        window.location.href = "/MobileApp/MobileCenter/EditPersonDataText?title=" + title + "&type=" + type + "&data=" + data;
    }
    function EditPersonDataArea(item, type) {
        var title = $(item).find("span").text();
        var data =$(item).find("i").text()+";"+ $(item).find("em").text();
        window.location.href = "/MobileApp/MobileCenter/EditPersonDataAreas?title=" + title + "&type=" + type + "&data=" + data;
    }
</script>
<script>
    (function ($, doc) {
				$.init();
				$.ready(function() {
					/**
					 * 获取对象属性的值
					 * 主要用于过滤三级联动中，可能出现的最低级的数据不存在的情况，实际开发中需要注意这一点；
					 * param {Object} obj 对象
					 * param {String} param 属性名
					 */
					var _getParam = function(obj, param) {
						return obj[param] || '';
					};

				    //级联示例

					    var cityPicker = new $.PopPicker({
					        layer: 2
					    });
					    cityPicker.setData(cityData);
					    var showCityPickerButton = doc.getElementById('showCityPicker');
					    //var cityResult = doc.getElementById('cityResult');
					    showCityPickerButton.addEventListener('tap', function (event) {
					        cityPicker.show(function (items) {
					            //cityResult.innerText = "你选择的城市是:" + items[0].text + " " + items[1].text;
					            document.getElementById("showCityPickerem").innerHTML = items[0].text + " " + items[1].text;
					            selectcity(items[1].value, "CityID");
					            //返回 false 可以阻止选择框的关闭
					            //return false;
					        });
					    }, false);
					

				    //-----------------------------------------
					    function selectcity(data,type)
					    {
					        // 第一步： 获得XMLHttpRequest对象
					        var ajax = new XMLHttpRequest();
					        // 第二步： 设置状态监听函数
					        ajax.onreadystatechange = function () {
					            console.log(ajax.readyState);
					            console.log(ajax.status);
					            // 第五步：在监听函数中，判断readyState=4 && status=200表示请求成功
					            if (ajax.readyState == 4 && ajax.status == 200) {
					                // 第六步： 使用responseText、responseXML接受响应数据，并使用原生JS操作DOM进行显示
					                console.log(ajax.responseText);
					                console.log(ajax.responseXML);// 返回不是XML，显示null
					                console.log(JSON.parse(ajax.responseText));
					                console.log(eval("(" + ajax.responseText + ")"));
					            }
					        }
					        // 第三步： open一个链接
					        ajax.open("POST", "/MobileApp/MobileCenter/updatePersonData", false);//true异步请求，false同步
					        ajax.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
					        // 第四步： send一个请求。 可以发送对象和字符串，不需要传递数据发送null
					        ajax.send("data=" + data + "&type=" + type);
					        window.top.location.href = window.top.location.href;
					    }

				});
			})(mui, document);
</script>